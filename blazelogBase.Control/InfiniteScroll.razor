@inject IJSRuntime JSRuntime

@ChildContent

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ObserverTargetId { get; set; }

    [Parameter]
    public EventCallback<bool> ObservableTargetReached { get; set; }

    private DotNetObjectReference<InfiniteScroll> objectRef;

    private readonly Lazy<Task<IJSObjectReference>> moduleTask;

    public InfiniteScroll()
    {
        moduleTask = new(() => JSRuntime.InvokeAsync<IJSObjectReference>(
            "import", "./_content/blazelogBase.Control/js/observer.js").AsTask());
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            var module = await moduleTask.Value;
            objectRef = DotNetObjectReference.Create(this);

            var initResult = await module.InvokeAsync<dynamic>("initObserver", objectRef, ObserverTargetId);
        }
    }

    [JSInvokable]
    public async Task OnIntersection()
    {
        await ObservableTargetReached.InvokeAsync(true);
    }
}
