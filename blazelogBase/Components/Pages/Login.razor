@using blazelogBase.Controllers
@using blazelogBase.Models
@using blazelogBase.Components.Layout
@using MudBlazor




@inject LayoutStateModel GlobalState

<LayoutView Layout="typeof(MudaLayout)">
    <PageTitle>Login</PageTitle>
    <HeadContent>
        <style>
            main {
            background: #f0f088;
            }
        </style>
    </HeadContent>



    <h1>Hello, User Login!</h1>
    <MudPaper Elevation="3" Style="padding:10px; padding-bottom: 50px;">

        <MudTextField @bind-Value="@_model.UserId" Label="User Id" Variant="@Variant.Outlined"  />
        <MudTextField @bind-Value="@_model.Password" Label="Password" Variant="@Variant.Outlined" InputType="@PasswordInput"  Adornment="@Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordAdorn" />

    </MudPaper>





</LayoutView>


@code {

    private LoginModel _model = new();


    private bool _isProcessing = false;
    private string? _error = null;

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordAdorn()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task<bool> LoginAsync()
    {
        _error = null;
        _isProcessing = true;
        try
        {
            var result= await Task.FromResult(true);
            return result;
        }
        catch (Exception ex)
        {
            _isProcessing = false;
            _error = ex.Message;
        }

        return false;
    }

}
